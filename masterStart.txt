Set Up Live React App deployed on GitHub

1.	create-react-app  app_title | creates react app with provided title  | terminal
2.	npm start | launches site locally for active viewing  | terminal
3.	create new repository | GitHub
4. 	git remote add origin https://github.com/username/newly_created_repository.git | ties GitHub to web app | terminal
5. 	git push -u origin master  | pushes basic app to GitHub for hosting | terminal
6.	git checkout -b gh-pages  | creates and switches to gh-pages branch | terminal
7. 	git status  | lists updated file to be committed | terminal 
8. 	git add src/App.js (or any file you with to initialize the update) | pushes file to staging area of git | terminal
9. 	git commit -m "message of change made goes here" | commits change | terminal
10. 	git push -u origin gh-pages  | pushes app to branch gh-pages on GitHub
11. 	"homepage": "https://your_github_username.github.io/your_project_repository_name/"  | add homepage property to package.json |  package.json
12. 	npm i -D gh-pages  | installs gh-pages script to simplify loading process |  terminal
13. 	"predeploy": "npm run build"  |  add both predeploy and deploy under scripts property  |  package.json
	"deploy": "gh-pages -d build" 
14. 	npm run deploy  |  rebuilds hosted GitHub site with any modifications made to app  |  terminal  


Early React Steps
1.	replace favicon.ico  |  ./public/favicon.ico
2. 	add Google Fonts  |  index.html
3.	edit <title>  |  index.html
4. 	create /components  |  ./src
5.	create /App and move App.css, App.js  |  ./src
6. 	update moved paths to App/App.css and App/App.js  |  index.js 
7. 	create new component ie. /Home, Home.css.js, Home.js  |  ./src/components
8.	npm install react-router-dom  |  adds script to allow multipage react app  |  terminal

 
